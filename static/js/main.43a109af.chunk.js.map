{"version":3,"sources":["components/NavBar.js","components/Home.js","actions/updateActions.js","components/Rules.js","components/Game.js","components/About.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["withRouter","props","className","to","Home","state","height","width","minesNo","handleChange","e","target","value","setState","id","handleChangeMinesNo","handleSubmit","preventDefault","updateConfigAndInit","history","push","type","min","max","onChange","this","for","onClick","React","Component","connect","dispatch","h","w","no","val","Rules","Game","toSTR","activities","res","i","length","s","innerArrayLength","j","block","mat","stat","row_no","col_no","updateOnClick","row","matrix_row","status_row","r","table","matrix","status","ans","minesNumber","updateClick","About","App","exact","path","component","Boolean","window","location","hostname","match","initState","new_matrix","new_mines","Math","floor","random","indexOf","sort","startState","Array","fill","map","minesLocation","rootReducer","action","new_status","console","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43a109af.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, withRouter, NavLink } from 'react-router-dom'\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <nav className=\"nav-wrapper blue darken-3\">\r\n            <div className=\"container\">\r\n                <a className=\"brand-logo left\">\r\n                    <NavLink to=\"/\">\r\n                        Minesweeper\r\n                </NavLink>\r\n                </a>\r\n                <ul className=\"right\">\r\n                    <li><NavLink to=\"/\">Home</NavLink></li>\r\n                    <li><NavLink to=\"/rules\">Rules</NavLink></li>\r\n                    <li><NavLink to=\"/game\">Game</NavLink></li>\r\n                    <li><NavLink to=\"/about\">About</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(NavBar);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateConfigAndInit } from '../actions/updateActions'\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        height: 10,\r\n        width: 10,\r\n        minesNo: 10,\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // e.preventDefault()\r\n        // console.log(e.target)\r\n        if (e.target.value <= 30 )\r\n            this.setState(\r\n                {\r\n                    [e.target.id]: e.target.value\r\n                }\r\n            )\r\n    }\r\n\r\n    handleChangeMinesNo = (e) => {\r\n        if (e.target.value <= this.state.width * this.state.height)\r\n            this.setState(\r\n                {\r\n                    [e.target.id]: e.target.value\r\n                }\r\n            )\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.updateConfigAndInit(this.state.height, this.state.width, this.state.minesNo)\r\n        this.props.history.push('/game')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h4 className=\"center\">Welcome to Home...</h4>\r\n                <div className=\"inputs\">\r\n                    <input type=\"number\" id=\"width\" min=\"1\" max=\"30\" className=\"width\" onChange={this.handleChange} value={this.state.width} />\r\n                    <label for=\"width\">Width (between 1 and 30)</label>\r\n                    {/* <span class=\"helper-text\" data-error=\"wrong\" data-success=\"right\">Helper text</span> */}\r\n\r\n\r\n                    <input type=\"number\" id=\"height\" min=\"1\" max=\"30\" className=\"height\" onChange={this.handleChange} value={this.state.height}/>\r\n                    <label for=\"height\">Height (between 1 and 30)</label>\r\n                    {/* <span class=\"helper-text\" data-error=\"wrong\" data-success=\"right\">Helper text</span> */}\r\n\r\n                    <input type=\"number\" id=\"minesNo\" className=\"minesNo\" onChange={this.handleChangeMinesNo} value={this.state.minesNo} />\r\n                    <label for=\"minesNo\">Mines number (between 1 and height * width)</label>\r\n                    {/* <span class=\"helper-text\" data-error=\"wrong\" data-success=\"right\"></span> */}\r\n                    <p></p>\r\n                    <button className=\"btn blue lighten-2 center\" onClick={this.handleSubmit}>Start Game!</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // this.state.height = state.heigth;\r\n    // this.state.width = state.width;\r\n    // this.state.minesNo = state.minesNo;\r\n\r\n    // return {\r\n    //     height: state.height,\r\n    //     width: state.width,\r\n    //     minesNo: state.minesNumber\r\n    // }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateConfigAndInit: (h, w, no) => {\r\n            dispatch(updateConfigAndInit(h, w, no))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","export const updateConfigAndInit = (height, width, minesNo) => {\r\n    return {\r\n        type: 'UPDATE_CONFIG',\r\n        val: {\r\n            height: height,\r\n            width: width,\r\n            minesNo: minesNo\r\n        }\r\n    }\r\n}\r\nexport const updateClick = (row_no, col_no) => {\r\n    return {\r\n        type: 'UPDATE_CLICK',\r\n        val: {\r\n            row_no: row_no,\r\n            col_no: col_no\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Rules = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h4 className=\"center\">Rules</h4>\r\n            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quisquam accusamus quos ratione eum, in eos, voluptatem consequuntur unde laudantium excepturi natus. Laborum cum ipsa vero cumque ut quibusdam deleniti consectetur.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateClick } from '../actions/updateActions'\r\n\r\nclass Game extends Component {\r\n    toSTR = (activities) => {\r\n        let res = \"\";\r\n        for (let i = 0; i < activities.length; i++) {\r\n            // get the size of the inner array\r\n            let s = \"\";\r\n            let innerArrayLength = activities[i].length;\r\n            // loop the inner array\r\n            for (let j = 0; j < innerArrayLength; j++) {\r\n                s += activities[i][j];\r\n            }\r\n            res += s + '\\n'\r\n        }\r\n        return res;\r\n    }\r\n\r\n    block = (mat, stat, row_no, col_no) => {\r\n        if (stat === 0) {\r\n            return <div className=\"col s0.5\" onClick={() => this.props.updateOnClick(row_no,col_no)}>A</div>\r\n        } else if (stat === 2) {\r\n            return <div className=\"col s0.5\">Flag</div>\r\n        } else {\r\n            if (mat === -1) return <div className=\"col s0.5\">Mine</div>\r\n            else return <div className=\"col s0.5\">{mat}</div>\r\n        }\r\n\r\n    }\r\n    row = (matrix_row, status_row, row_no) => {\r\n        let r = [];\r\n        for (let i = 0; i < matrix_row.length; i++) {\r\n            r.push(this.block(matrix_row[i], status_row[i], row_no, i));\r\n        }\r\n        return r;\r\n    }\r\n    table = (matrix, status) => {\r\n        let ans = [];\r\n        for (let i = 0; i < matrix.length; i++) {\r\n            ans.push(<div className=\"row custom-row\">{this.row(matrix[i], status[i], i)}</div>);\r\n        }\r\n\r\n        // console.table(ans);\r\n        return ans;\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        return (\r\n            <div className=\"container\" >\r\n                <h4 className=\"center\">Game</h4>\r\n                <div className=\"col \">\r\n                    {this.table(this.props.matrix, this.props.status)}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s2\">\r\n                        <p>Height : {this.props.height}</p>\r\n                    </div>\r\n                    <div className=\"col s2\">\r\n                        <p>Width : {this.props.width}</p>\r\n                    </div>\r\n                    <div className=\"col s2\">\r\n                        <p>Mines Number  : {this.props.minesNumber}</p>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <p>Matrix  : {this.toSTR(this.props.matrix)}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        height: state.height,\r\n        width: state.width,\r\n        minesNumber: state.minesNumber,\r\n        matrix: state.matrix,\r\n        status: state.status,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateOnClick: (row_no, col_no) => {\r\n            // console.log(\"Clicked \" + row_no + col_no);\r\n            dispatch(updateClick(row_no, col_no))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h4 className=\"center\">About</h4>\r\n            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quisquam accusamus quos ratione eum, in eos, voluptatem consequuntur unde laudantium excepturi natus. Laborum cum ipsa vero cumque ut quibusdam deleniti consectetur.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, { Component } from 'react';\nimport NavBar from './components/NavBar.js'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Rules from './components/Rules'\nimport Game from './components/Game'\nimport About from './components/About'\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/about' component={About} />\n            <Route path='/game' component={Game} />\n            <Route path='/rules' component={Rules} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    height: 10,\r\n    width: 10,\r\n    minesNumber: 10,\r\n    matrix: startState(),\r\n    status: new Array(10).fill(0).map(() => new Array(10).fill(0)),\r\n    minesLocation: [],\r\n}\r\nfunction startState(){\r\n    var new_matrix = [];\r\n    var new_mines = [];\r\n    // var arr = [];\r\n    while (new_mines.length < 10) {\r\n        var r = Math.floor(Math.random() * 100) + 1;\r\n        if (new_mines.indexOf(r) === -1) new_mines.push(r);\r\n    }\r\n    new_mines.sort()\r\n    var row;\r\n    for (var i = 1; i <= 10; i++) {\r\n        row = [];\r\n        for (var j = 1; j <= 10; j++) {\r\n            if (new_mines.indexOf((i - 1) * 10 + j) === -1)\r\n                row.push(0);\r\n            else\r\n                row.push(-1);\r\n        }\r\n        new_matrix.push(row);\r\n    }\r\n\r\n    for (var i = 0; i < 10;i++) {\r\n        for (var j = 0; j < 10; j++) {\r\n            if (new_matrix[i][j] === -1) {\r\n                if (i + 1 < 10 && new_matrix[i + 1][j] !== -1) new_matrix[i + 1][j]++;\r\n                if (i + 1 < 10 && j - 1 >= 0 && new_matrix[i + 1][j - 1] !== -1) new_matrix[i + 1][j - 1]++;\r\n                if (i + 1 < 10 && j + 1 <10 && new_matrix[i + 1][j + 1] !== -1) new_matrix[i + 1][j + 1]++;\r\n                if (j + 1 < 10 && new_matrix[i][j + 1] !== -1) new_matrix[i][j + 1]++;\r\n                if (j - 1 >= 0 && new_matrix[i][j - 1] !== -1) new_matrix[i][j - 1]++;\r\n                if (i - 1 >= 0 && new_matrix[i - 1][j] !== -1) new_matrix[i - 1][j]++;\r\n                if (i - 1 >= 0 && j - 1 >= 0 && new_matrix[i - 1][j - 1] !== -1) new_matrix[i - 1][j - 1]++;\r\n                if (i - 1 >= 0 && j + 1 < 10 && new_matrix[i - 1][j + 1] !== -1) new_matrix[i - 1][j + 1]++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return(new_matrix);\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    // console.log(action);\r\n    if (action.type === 'UPDATE_CONFIG') {\r\n        // console.log(state)\r\n        // let newPosts = state.posts.filter(post => action.id  !== post.id)\r\n        var new_matrix = [];\r\n        var new_mines = [];\r\n        var new_status = [];\r\n        // var arr = [];\r\n        while (new_mines.length < action.val.minesNo) {\r\n            var r = Math.floor(Math.random() * action.val.height * action.val.width) + 1;\r\n            if (new_mines.indexOf(r) === -1) new_mines.push(r);\r\n        }\r\n        new_mines.sort()\r\n        var row;\r\n        for (var i = 1; i <= action.val.height; i++) {\r\n            row = [];\r\n            for (var j = 1; j <= action.val.width; j++) {\r\n                if (new_mines.indexOf((i - 1) * action.val.height + j) === -1)\r\n                    row.push(0);\r\n                else\r\n                    row.push(-1);\r\n            }\r\n            new_matrix.push(row);\r\n        }\r\n        for (var i = 1; i <= action.val.height; i++) {\r\n            row = [];\r\n            for (var j = 1; j <= action.val.width; j++) {\r\n                    row.push(0);\r\n            }\r\n            new_status.push(row);\r\n        }\r\n        for (var i = 0; i < new_matrix.length; i++) {\r\n            for (var j = 0; j < new_matrix[i].length; j++) {\r\n                if (new_matrix[i][j] === -1) {\r\n                    if (i + 1 < new_matrix.length && new_matrix[i + 1][j] !== -1) new_matrix[i + 1][j]++;\r\n                    if (i + 1 < new_matrix.length && j - 1 >= 0 && new_matrix[i + 1][j - 1] !== -1) new_matrix[i + 1][j - 1]++;\r\n                    if (i + 1 < new_matrix.length && j + 1 < new_matrix[i].length && new_matrix[i + 1][j + 1] !== -1) new_matrix[i + 1][j + 1]++;\r\n                    if (j + 1 < new_matrix[i].length && new_matrix[i][j + 1] !== -1) new_matrix[i][j + 1]++;\r\n                    if (j - 1 >= 0 && new_matrix[i][j - 1] !== -1) new_matrix[i][j - 1]++;\r\n                    if (i - 1 >= 0 && new_matrix[i - 1][j] !== -1) new_matrix[i - 1][j]++;\r\n                    if (i - 1 >= 0 && j - 1 >= 0 && new_matrix[i - 1][j - 1] !== -1) new_matrix[i - 1][j - 1]++;\r\n                    if (i - 1 >= 0 && j + 1 < new_matrix[i].length && new_matrix[i - 1][j + 1] !== -1) new_matrix[i - 1][j + 1]++;\r\n                }\r\n            }\r\n        }\r\n\r\n        console.table(new_matrix);\r\n        console.table(new_mines);\r\n        console.table(new_status);\r\n        return {\r\n            ...state,\r\n            height: action.val.height,\r\n            width: action.val.width,\r\n            minesNumber: action.val.minesNo,\r\n            matrix: new_matrix,\r\n            minesLocation: new_mines,\r\n            status:new_status,\r\n        }\r\n    }else if(action.type === 'UPDATE_CLICK'){\r\n        console.table(action.val)\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}