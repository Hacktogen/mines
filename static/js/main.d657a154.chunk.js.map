{"version":3,"sources":["components/NavBar.js","components/Home.js","actions/updateActions.js","components/Rules.js","components/Game.js","components/About.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["withRouter","props","className","to","Home","state","height","width","minesNo","handleChange","e","target","value","setState","id","handleChangeMinesNo","handleSubmit","preventDefault","updateConfigAndInit","history","push","type","min","max","onChange","this","for","onClick","React","Component","connect","dispatch","h","w","no","val","Rules","Game","toSTR","activities","res","i","length","s","innerArrayLength","j","block","mat","stat","row_no","col_no","updateOnClick","row","matrix_row","status_row","r","table","matrix","status","ans","console","log","headMessage","winStatus","minesNumber","class","flagOn","invertFlag","clickCnt","count","updateClick","curr_flag","About","App","exact","path","component","Boolean","window","location","hostname","match","initState","new_matrix","new_mines","Math","floor","random","indexOf","sort","startState","Array","fill","map","minesLocation","openPressed","curr_mat","curr_stat","hasWon","allOne","rootReducer","action","new_status","curr_winStatus","new_flag","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d657a154.chunk.js","sourcesContent":["import React from 'react'\r\nimport {  withRouter, NavLink } from 'react-router-dom'\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <nav className=\"nav-wrapper blue darken-3\">\r\n            <div className=\"container\">\r\n                <div className=\"brand-logo left\">\r\n                    {/* <NavLink to=\"/\"> */}\r\n                        Minesweeper\r\n                {/* </NavLink> */}\r\n                </div>\r\n                <ul className=\"right\">\r\n                    <li><NavLink to=\"/mines\">Home</NavLink></li>\r\n                    <li><NavLink to=\"/mines/rules\">Rules</NavLink></li>\r\n                    <li><NavLink to=\"/mines/game\">Game</NavLink></li>\r\n                    <li><NavLink to=\"/mines/about\">About</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(NavBar);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateConfigAndInit } from '../actions/updateActions'\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        height: 10,\r\n        width: 10,\r\n        minesNo: 10,\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // e.preventDefault()\r\n        // console.log(e.target)\r\n        if (e.target.value <= 30 )\r\n            this.setState(\r\n                {\r\n                    [e.target.id]: e.target.value\r\n                }\r\n            )\r\n    }\r\n\r\n    handleChangeMinesNo = (e) => {\r\n        if (e.target.value <= this.state.width * this.state.height)\r\n            this.setState(\r\n                {\r\n                    [e.target.id]: e.target.value\r\n                }\r\n            )\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.updateConfigAndInit(this.state.height, this.state.width, this.state.minesNo)\r\n        this.props.history.push('/mines/game')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h4 className=\"center\">Welcome to Home...</h4>\r\n                <div className=\"inputs\">\r\n                    <input type=\"number\" id=\"width\" min=\"1\" max=\"30\" className=\"width\" onChange={this.handleChange} value={this.state.width} />\r\n                    <label for=\"width\">Width (between 1 and 30)</label>\r\n                    {/* <span class=\"helper-text\" data-error=\"wrong\" data-success=\"right\">Helper text</span> */}\r\n\r\n\r\n                    <input type=\"number\" id=\"height\" min=\"1\" max=\"30\" className=\"height\" onChange={this.handleChange} value={this.state.height}/>\r\n                    <label for=\"height\">Height (between 1 and 30)</label>\r\n                    {/* <span class=\"helper-text\" data-error=\"wrong\" data-success=\"right\">Helper text</span> */}\r\n\r\n                    <input type=\"number\" id=\"minesNo\" className=\"minesNo\" onChange={this.handleChangeMinesNo} value={this.state.minesNo} />\r\n                    <label for=\"minesNo\">Mines number (between 1 and height * width)</label>\r\n                    {/* <span class=\"helper-text\" data-error=\"wrong\" data-success=\"right\"></span> */}\r\n                    <p></p>\r\n                    <button className=\"btn blue lighten-2 center\" onClick={this.handleSubmit}>Start Game!</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // this.state.height = state.heigth;\r\n    // this.state.width = state.width;\r\n    // this.state.minesNo = state.minesNo;\r\n\r\n    // return {\r\n    //     height: state.height,\r\n    //     width: state.width,\r\n    //     minesNo: state.minesNumber\r\n    // }\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateConfigAndInit: (h, w, no) => {\r\n            dispatch(updateConfigAndInit(h, w, no))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","export const updateConfigAndInit = (height, width, minesNo) => {\r\n    return {\r\n        type: 'UPDATE_CONFIG',\r\n        val: {\r\n            height: height,\r\n            width: width,\r\n            minesNo: minesNo\r\n        }\r\n    }\r\n}\r\nexport const updateClick = (row_no, col_no) => {\r\n    return {\r\n        type: 'UPDATE_CLICK',\r\n        val: {\r\n            row_no: row_no,\r\n            col_no: col_no\r\n        }\r\n    }\r\n}\r\nexport const invertFlag = (curr_flag) => {\r\n    return {\r\n        type: 'INVERT_FLAG',\r\n        val: {\r\n            curr_flag : curr_flag,\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Rules = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h4 className=\"center\">Rules</h4>\r\n            <p></p>\r\n            <h5 className=\"center\">How to start</h5>\r\n            <p>Initially, of course, you have to guess by clicking a random box.</p>\r\n            <h5 className=\"center\">How to proceed further</h5>\r\n            <p>If a box that you've clicked in empty, that means that box is touching 0 mines. If the box has a number in it, that's how many mines that specific box is touching.</p>\r\n            <h5 className=\"center\">Flag Rules</h5>\r\n            <p>You can then infer which unlclicked boxes are mines. You can flag on \"suspected mine\" boxes to mark them with a flag, so you don't accidentally click on that. Use the floating button on bottom-right corner to falg or unflag boxes. If you are able to expose all non-mine boxes, you win.</p>\r\n            <h5 className=\"center\">When You are Done</h5>\r\n            <p>Once you have finished the game go back to HOME page to plat once again.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateClick, invertFlag } from '../actions/updateActions'\r\n\r\n\r\nclass Game extends Component {\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return !shallowEqual(this.state.props, nextState.props);\r\n    // }\r\n    toSTR = (activities) => {\r\n        let res = \"\";\r\n        for (let i = 0; i < activities.length; i++) {\r\n            // get the size of the inner array\r\n            let s = \"\";\r\n            let innerArrayLength = activities[i].length;\r\n            // loop the inner array\r\n            for (let j = 0; j < innerArrayLength; j++) {\r\n                s += activities[i][j];\r\n            }\r\n            res += s + '\\n'\r\n        }\r\n        return res;\r\n    }\r\n\r\n    block = (mat, stat, row_no, col_no) => {\r\n        // if (row_no >= this.props.height || col_no >= this.props.width) return;\r\n        if (stat === 0) {\r\n            return <div className=\"box closed\" onClick={() => this.props.updateOnClick(row_no, col_no)}>\r\n                .\r\n            </div>\r\n        } else if (stat === 2) {\r\n            return <div className=\"box closed flag\" onClick={() => this.props.updateOnClick(row_no, col_no)}><i className=\"tiny material-icons  light-green-text text-accent-3\" >flag</i></div>\r\n        } else {\r\n            if (mat === -1) return <div className=\"box mine\"><i className=\"tiny material-icons\" >wb_sunny</i></div>\r\n            else return <div className=\"box open\">{mat !== 0 ? mat : \".\"}</div>\r\n        }\r\n\r\n    }\r\n    row = (matrix_row, status_row, row_no) => {\r\n        let r = [];\r\n        for (let i = 0; i < matrix_row.length; i++) {\r\n            r.push(this.block(matrix_row[i], status_row[i], row_no, i));\r\n        }\r\n        return r;\r\n    }\r\n    table = (matrix, status) => {\r\n        let ans = [];\r\n        for (let i = 0; i < matrix.length; i++) {\r\n            ans.push(<div className=\"wrapper\">{this.row(matrix[i], status[i], i)}</div>);\r\n        }\r\n\r\n        // console.table(ans);\r\n        return ans;\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        let headMessage = (<></>);\r\n        if (this.props.winStatus === 0) {\r\n            headMessage = (<h4 className=\"center\">Game</h4>)\r\n        } else if (this.props.winStatus === 1) {\r\n            headMessage = (<h4 className=\"center green-text\">Game Won!</h4>)\r\n        } else {\r\n            headMessage = (<h4 className=\"center red-text\">Game Over, You Lose!</h4>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\" >\r\n                {headMessage}\r\n                <div className=\"center\">\r\n                    <div className=\"col \">\r\n                        {this.table(this.props.matrix, this.props.status)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s2\">\r\n                        <p>Height : {this.props.height}</p>\r\n                    </div>\r\n                    <div className=\"col s2\">\r\n                        <p>Width : {this.props.width}</p>\r\n                    </div>\r\n                    <div className=\"col s2\">\r\n                        <p>Mines Number  : {this.props.minesNumber}</p>\r\n                    </div>\r\n                    {/* <div className=\"col\">\r\n                        <p>Matrix  : {this.toSTR(this.props.matrix)}</p>\r\n                    </div> */}\r\n\r\n                </div><div className=\"fixed-action-btn\">\r\n                    <a class=\"btn-floating btn-large red\">\r\n                        {\r\n                            (this.props.flagOn === 1) ?\r\n                                (<i class=\"large material-icons red-text white\" onClick={() => this.props.invertFlag(this.props.flagOn)}>flag</i>) :\r\n                                (<i class=\"large material-icons blue\" onClick={() => this.props.invertFlag(this.props.flagOn)}>flag</i>)\r\n                        }\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        height: state.height,\r\n        width: state.width,\r\n        minesNumber: state.minesNumber,\r\n        matrix: state.matrix,\r\n        status: state.status,\r\n        clickCnt: state.count,\r\n        flagOn: state.flagOn,\r\n        winStatus: state.winStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateOnClick: (row_no, col_no) => {\r\n            // console.log(\"Clicked \" + row_no + col_no);\r\n            dispatch(updateClick(row_no, col_no))\r\n        },\r\n        invertFlag: (curr_flag) => {\r\n            dispatch(invertFlag(curr_flag))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h4 className=\"center\">About</h4>\r\n            <p>Obviously made with love while learning React.js, Go ahead Enjoy by going to HOME page</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, { Component } from 'react';\nimport NavBar from './components/NavBar.js'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Rules from './components/Rules'\nimport Game from './components/Game'\nimport About from './components/About'\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/mines' component={Home} />\n            <Route path='/mines/about' component={About} />\n            <Route path='/mines/game' component={Game} />\n            <Route path='/mines/rules' component={Rules} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    height: 10,\r\n    width: 10,\r\n    minesNumber: 10,\r\n    matrix: startState(),\r\n    status: new Array(10).fill(0).map(() => new Array(10).fill(0)),\r\n    minesLocation: [],\r\n    count: 0,\r\n    flagOn: 0,\r\n    winStatus: 0,\r\n}\r\nfunction startState() {\r\n    let new_matrix = [];\r\n    let new_mines = [];\r\n    // var arr = [];\r\n    while (new_mines.length < 10) {\r\n        let r = Math.floor(Math.random() * 100) + 1;\r\n        if (new_mines.indexOf(r) === -1) new_mines.push(r);\r\n    }\r\n    new_mines.sort()\r\n    let row;\r\n    for (let i = 1; i <= 10; i++) {\r\n        row = [];\r\n        for (let j = 1; j <= 10; j++) {\r\n            if (new_mines.indexOf((i - 1) * 10 + j) === -1)\r\n                row.push(0);\r\n            else\r\n                row.push(-1);\r\n        }\r\n        new_matrix.push(row);\r\n    }\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n        for (let j = 0; j < 10; j++) {\r\n            if (new_matrix[i][j] === -1) {\r\n                if (i + 1 < 10 && new_matrix[i + 1][j] !== -1) new_matrix[i + 1][j]++;\r\n                if (i + 1 < 10 && j - 1 >= 0 && new_matrix[i + 1][j - 1] !== -1) new_matrix[i + 1][j - 1]++;\r\n                if (i + 1 < 10 && j + 1 < 10 && new_matrix[i + 1][j + 1] !== -1) new_matrix[i + 1][j + 1]++;\r\n                if (j + 1 < 10 && new_matrix[i][j + 1] !== -1) new_matrix[i][j + 1]++;\r\n                if (j - 1 >= 0 && new_matrix[i][j - 1] !== -1) new_matrix[i][j - 1]++;\r\n                if (i - 1 >= 0 && new_matrix[i - 1][j] !== -1) new_matrix[i - 1][j]++;\r\n                if (i - 1 >= 0 && j - 1 >= 0 && new_matrix[i - 1][j - 1] !== -1) new_matrix[i - 1][j - 1]++;\r\n                if (i - 1 >= 0 && j + 1 < 10 && new_matrix[i - 1][j + 1] !== -1) new_matrix[i - 1][j + 1]++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (new_matrix);\r\n}\r\nfunction openPressed(curr_mat, curr_stat, row_no, col_no, h, w) {\r\n    if (curr_stat[row_no][col_no] === 2) return;\r\n    if (curr_stat[row_no][col_no] === 1) return;\r\n    curr_stat[row_no][col_no] = 1;\r\n    if (curr_mat[row_no][col_no] === 0) {\r\n        let i = row_no, j = col_no;\r\n        if (i + 1 < h) openPressed(curr_mat, curr_stat, i + 1, j, h, w);\r\n        if (i + 1 < h && j - 1 >= 0) openPressed(curr_mat, curr_stat, i + 1, j - 1, h, w);\r\n        if (i + 1 < h && j + 1 < w) openPressed(curr_mat, curr_stat, i + 1, j + 1, h, w);\r\n        if (j + 1 < w) openPressed(curr_mat, curr_stat, i, j + 1, h, w);\r\n        if (j - 1 >= 0) openPressed(curr_mat, curr_stat, i, j - 1, h, w);\r\n        if (i - 1 >= 0) openPressed(curr_mat, curr_stat, i - 1, j, h, w);\r\n        if (i - 1 >= 0 && j - 1 >= 0) openPressed(curr_mat, curr_stat, i - 1, j - 1, h, w);\r\n        if (i - 1 >= 0 && j + 1 < w) openPressed(curr_mat, curr_stat, i - 1, j + 1, h, w);\r\n    }\r\n}\r\nfunction hasWon(curr_mat, curr_stat, h, w) {\r\n    for(let i=0;i<h;i++){\r\n        for(let j=0;j<w;j++){\r\n            if(curr_mat[i][j] !== -1 && curr_stat[i][j] === 0) return false;\r\n        }\r\n    }\r\n   \r\n    return true;\r\n}\r\nfunction allOne(curr_stat, h, w) {\r\n    for(let i=0;i<h;i++){\r\n        for(let j=0;j<w;j++){\r\n            curr_stat[i][j] =1;\r\n        }\r\n    }\r\n    return curr_stat;\r\n}\r\nconst rootReducer = (state = initState, action) => {\r\n    // console.log(action);\r\n    if (action.type === 'UPDATE_CONFIG') {\r\n        // console.log(state)\r\n        // let newPosts = state.posts.filter(post => action.id  !== post.id)\r\n        let new_matrix = [];\r\n        let new_mines = [];\r\n        let new_status = [];\r\n        // var arr = [];\r\n        while (new_mines.length < action.val.minesNo) {\r\n            let r = Math.floor(Math.random() * action.val.height * action.val.width) + 1;\r\n            if (new_mines.indexOf(r) === -1) new_mines.push(r);\r\n        }\r\n        new_mines.sort()\r\n        let row;\r\n        for (let i = 1; i <= action.val.height; i++) {\r\n            row = [];\r\n            for (let j = 1; j <= action.val.width; j++) {\r\n                if (new_mines.indexOf((i - 1) * action.val.height + j) === -1)\r\n                    row.push(0);\r\n                else\r\n                    row.push(-1);\r\n            }\r\n            new_matrix.push(row);\r\n        }\r\n        for (let i = 1; i <= action.val.height; i++) {\r\n            row = [];\r\n            for (let j = 1; j <= action.val.width; j++) {\r\n                row.push(0);\r\n            }\r\n            new_status.push(row);\r\n        }\r\n        for (let i = 0; i < new_matrix.length; i++) {\r\n            for (let j = 0; j < new_matrix[i].length; j++) {\r\n                if (new_matrix[i][j] === -1) {\r\n                    if (i + 1 < new_matrix.length && new_matrix[i + 1][j] !== -1) new_matrix[i + 1][j]++;\r\n                    if (i + 1 < new_matrix.length && j - 1 >= 0 && new_matrix[i + 1][j - 1] !== -1) new_matrix[i + 1][j - 1]++;\r\n                    if (i + 1 < new_matrix.length && j + 1 < new_matrix[i].length && new_matrix[i + 1][j + 1] !== -1) new_matrix[i + 1][j + 1]++;\r\n                    if (j + 1 < new_matrix[i].length && new_matrix[i][j + 1] !== -1) new_matrix[i][j + 1]++;\r\n                    if (j - 1 >= 0 && new_matrix[i][j - 1] !== -1) new_matrix[i][j - 1]++;\r\n                    if (i - 1 >= 0 && new_matrix[i - 1][j] !== -1) new_matrix[i - 1][j]++;\r\n                    if (i - 1 >= 0 && j - 1 >= 0 && new_matrix[i - 1][j - 1] !== -1) new_matrix[i - 1][j - 1]++;\r\n                    if (i - 1 >= 0 && j + 1 < new_matrix[i].length && new_matrix[i - 1][j + 1] !== -1) new_matrix[i - 1][j + 1]++;\r\n                }\r\n            }\r\n        }\r\n\r\n        console.table(new_matrix);\r\n        console.table(new_mines);\r\n        console.table(new_status);\r\n        return {\r\n            ...state,\r\n            height: action.val.height,\r\n            width: action.val.width,\r\n            minesNumber: action.val.minesNo,\r\n            matrix: new_matrix,\r\n            minesLocation: new_mines,\r\n            status: new_status,\r\n            count: 0,\r\n            flagOn: 0,\r\n            winStatus: 0,\r\n        }\r\n    } else if (action.type === 'UPDATE_CLICK') {\r\n        console.table(action.val)\r\n        var curr_mat = state.matrix;\r\n        var curr_stat = state.status;\r\n\r\n        if (state.flagOn === 0) {\r\n            if(curr_mat[action.val.row_no][action.val.col_no] == -1) {\r\n                console.log(\"change win status to 0\")\r\n                return{\r\n                    ...state,\r\n                    status: allOne(curr_stat,state.height,state.width),\r\n                    count: state.count + 1,\r\n                    winStatus: -1,\r\n                }\r\n            }\r\n            openPressed(curr_mat, curr_stat, action.val.row_no, action.val.col_no, state.height, state.width)\r\n            let curr_winStatus = state.winStatus\r\n            \r\n            if(hasWon(curr_mat,curr_stat,state.height,state.width)){\r\n                console.log(\"win_status changed to 1\")\r\n                curr_stat = allOne(curr_stat,state.height,state.width);\r\n                curr_winStatus = 1;\r\n            }\r\n            console.table(curr_stat)\r\n            return {\r\n                ...state,\r\n                status: curr_stat,\r\n                count: state.count + 1,\r\n                winStatus: curr_winStatus,\r\n            }\r\n        } else {\r\n            if (curr_stat[action.val.row_no][action.val.col_no] === 0) {\r\n                curr_stat[action.val.row_no][action.val.col_no] = 2;\r\n            } else if (curr_stat[action.val.row_no][action.val.col_no] === 2) {\r\n                curr_stat[action.val.row_no][action.val.col_no] = 0;\r\n            }\r\n            return {\r\n                ...state,\r\n                status: curr_stat,\r\n                count: state.count + 1,\r\n            }\r\n        }\r\n    } else if (action.type === 'INVERT_FLAG') {\r\n        // console.table(action);\r\n        let new_flag = (action.val.curr_flag === 0) ? 1 : 0;\r\n        // console.table(new_flag)\r\n        return {\r\n            ...state,\r\n            flagOn: new_flag,\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}